var documenterSearchIndex = {"docs":
[{"location":"index.html#","page":"Home","title":"Home","text":"CurrentModule = MajorizationFigures","category":"page"},{"location":"index.html#MajorizationFigures-1","page":"Home","title":"MajorizationFigures","text":"","category":"section"},{"location":"index.html#Examples-1","page":"Home","title":"Examples","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"using MajorizationFigures, Polyhedra\nusing MajorizationFigures: subsimplex\nusing MajorizationExtrema: majmin\nusing Combinatorics: permutations\n\nq = [21 // 100, 24 // 100, 55 // 100]\nϵ = 1 // 10\nBq = TV_Ball(q, ϵ)\nEs = subsimplex.(permutations(1:3))\n\nBq_colored = ColoredObject(Bq, nothing, \"opacity=.33,blue\")\nEs_colored = add_colors(Es)\n\nBq_pieces = [Bq ∩ s for s in Es]\nBq_pieces_colored = copy_colors.(Bq_pieces, Es_colored)\nBq_pieces_sorted = MajorizationFigures.sort_ordered.(Bq_pieces; rev=true)\nBq_pieces_sorted_colored = copy_colors.(Bq_pieces_sorted, Es_colored)\n\nfigure(Es_colored...)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"figure(Es_colored[1])","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"q_colored = ColoredObject(q, nothing, \"black\")\nfigure(q_colored, Bq_colored)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"figure(q_colored, Bq_pieces_colored...)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"q_sorted_colored = copy_colors(sort(q;rev=true), q_colored)\nfigure(Bq_pieces_sorted_colored..., q_sorted_colored)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"q_majmin = majmin(q, ϵ)\nq_majmin_colored = ColoredObject(q_majmin, nothing, \"white\")\nq_majmin_sorted_colored = copy_colors(sort(q_majmin;rev=true), q_majmin_colored)\nfigure(Bq_pieces_sorted_colored..., q_majmin_sorted_colored, q_sorted_colored)","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"figure(Bq_pieces_colored..., q_colored, q_majmin_colored)","category":"page"},{"location":"index.html#Reference-1","page":"Home","title":"Reference","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"","category":"page"},{"location":"index.html#Drawing-1","page":"Home","title":"Drawing","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"MajorizationFigures.figure\nMajorizationFigures.draw\nMajorizationFigures.ColoredObject\nMajorizationFigures.add_colors\nMajorizationFigures.copy_colors","category":"page"},{"location":"index.html#MajorizationFigures.figure","page":"Home","title":"MajorizationFigures.figure","text":"figure(objects...; scale = 4) -> TikzPicture\n\nCreates a TikzPicture by drawing each object to the scene, in order. If the objects are ColoredObject, their colors are used. Otherwise, the objects are all assigned colors (via add_colors). The keyword argument scale is passed to the final TikzPicture.\n\nEach object in objects must have a draw method.\n\n\n\n\n\n","category":"function"},{"location":"index.html#MajorizationFigures.draw","page":"Home","title":"MajorizationFigures.draw","text":"draw(io::IO, preamble_io::IO, object, color_name::AbstactString) -> Nothing\n\nPrints the Tikz code needed to draw the object to io, possibly also printing to preamble_io to define commands necessary for the drawing.\n\n\n\n\n\n","category":"function"},{"location":"index.html#MajorizationFigures.ColoredObject","page":"Home","title":"MajorizationFigures.ColoredObject","text":"struct ColoredObject{V,T<:Union{Colors.Colorant,Nothing}}\n    object::V\n    color::T\n    color_name::String\nend\n\nAn object to draw along with the color to draw it in. Set color to a Colors.Colorant to add the color to the LaTeX picture via \\definecolor with a name given by the color_name field. Otherwise, set color to nothing and use color_name directly as the color in the LaTeX code.\n\n\n\n\n\n","category":"type"},{"location":"index.html#MajorizationFigures.add_colors","page":"Home","title":"MajorizationFigures.add_colors","text":"add_colors(objects) -> Vector{<:ColoredObject}\n\nReturns a vector of ColoredObject wrappers of the objects, where the colors are chosen by Colors.distinguishable_colors.\n\n\n\n\n\n","category":"function"},{"location":"index.html#MajorizationFigures.copy_colors","page":"Home","title":"MajorizationFigures.copy_colors","text":"copy_colors(to, from::ColoredObject) -> ColoredObject\n\nCreates a ColoredObject wrapper of to by copying the colors from from.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Sorting-1","page":"Home","title":"Sorting","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"MajorizationFigures.sortpoly\nMajorizationFigures.subsimplex","category":"page"},{"location":"index.html#MajorizationFigures.sortpoly","page":"Home","title":"MajorizationFigures.sortpoly","text":"sortpoly(p::Polyhedron; rev = true) -> Vector{Polyhedron}\n\nReturns a collection of polyhedra whose union gives the set equal to sorting each element in p elementwise. Defaults to sorting from most to least (set rev = false to match the default behavior of Base.sort).\n\n\n\n\n\n","category":"function"},{"location":"index.html#MajorizationFigures.subsimplex","page":"Home","title":"MajorizationFigures.subsimplex","text":"subsimplex(perm) -> Polyhedron\n\nReturns the polyhedron consisting of the subset of the probability simplex that is sorted according to the permutation perm, in the sense that for q ∈ subsimplex(perm), issorted(q[perm]; rev=true) == true.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Other-1","page":"Home","title":"Other","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"MajorizationFigures.TV_Ball\nRandom.rand(::AbstractRNG,::Random.SamplerTrivial{<:Polyhedron{Rational{T}}}) where {T}","category":"page"},{"location":"index.html#MajorizationFigures.TV_Ball","page":"Home","title":"MajorizationFigures.TV_Ball","text":"TV_Ball(q, ϵ) -> Polyhedron\n\nGiven a probability vector q, create the polyhedron representing the ball of probability vectors which are within ϵ of q in total variation distance.\n\n\n\n\n\n","category":"function"},{"location":"index.html#Base.rand-Union{Tuple{T}, Tuple{Random.AbstractRNG,Random.SamplerTrivial{#s6,E} where E where #s6<:Polyhedra.Polyhedron{Rational{T}}}} where T","page":"Home","title":"Base.rand","text":"Random.rand(\n    rng::AbstractRNG,\n    S::Random.SamplerTrivial{<:Polyhedron{Rational{T}}},\n) -> Vector{Rational{T}}\n\nGenerate a random point in a polyhedron.\n\n\n\n\n\n","category":"method"}]
}
